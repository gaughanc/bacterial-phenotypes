from django.core.management.base import BaseCommand, CommandError
from wb0.models import Genus

clo_genera = ['Abyssivirga', 'Acetanaerobacterium', 'Acetatifactor', 'Acetitomaculum', 'Acetivibrio', 'Acetobacterium', 'Acetohalobium', 'Agathobacter', 'Alkalibacter', 'Alkalibaculum', 'Alkaliphilus', 'Aminicella', 'Ammonifex', 'Anaerobacter', 'Anaerobacterium', 'Anaerobium', 'Anaerofilum', 'Anaerofustis', 'Anaerosalibacter', 'Anaerosolibacter', 'Anaerosphaera', 'Anaerosporobacter', 'Anaerostipes', 'Anaerotruncus', 'Anoxynatronum', 'Asaccharospora', 'Blautia', 'Brassicibacter', 'Brockia', 'Butyricicoccus', 'Butyrivibrio', 'Caldanaerobacter', 'Caldanaerobius', 'Calderihabitans', 'Caldicoprobacter', 'Caldisalinibacter', 'Caloramator', 'Caloranaerobacter', 'Caloribacterium', 'Caminicella', 'Carboxydothermus', 'Catonella', 'Cellulosibacter', 'Cellulosilyticum', 'Christensenella', 'Clostridiisalibacter', 'Clostridium', 'Coprococcus', 'Coprothermobacter', 'Cryptanaerobacter', 'Defluviitalea', 'Dehalobacter', 'Desulfitibacter', 'Desulfitispora', 'Desulfitobacterium', 'Desulfonispora', 'Desulfosporosinus', 'Desulfotomaculum', 'Desulfovirgula', 'Desulfurispora', 'Dethiobacter', 'Dorea', 'Eisenbergiella', 'Ercella', 'Ethanoligenens', 'Eubacterium', 'Ezakiella', 'Faecalibacterium', 'Faecalitalea', 'Fastidiosipila', 'Fervidicella', 'Fervidicola', 'Filifactor', 'Fonticella', 'Fuchsiella', 'Fusicatenibacter', 'Garciella', 'Gelria', 'Geosporobacter', 'Gracilibacter', 'Halanaerobacter', 'Halanaerobaculum', 'Halanaerobium', 'Halarsenatibacter', 'Halobacteroides', 'Halocella', 'Haloimpatiens', 'Halonatronum', 'Halothermothrix', 'Hathewaya', 'Heliobacillus', 'Heliobacterium', 'Heliorestis', 'Herbinix', 'Hespellia', 'Holdemanella', 'Hungatella', 'Hydrogenispora', 'Hydrogenoanaerobacterium', 'Intestinibacter', 'Intestinimonas', 'Johnsonella', 'Keratinibaculum', 'Lachnoanaerobaculum', 'Lachnobacterium', 'Lachnospira', 'Lachnotalea', 'Lactonifactor', 'Lutispora', 'Marvinbryantia', 'Mobilisporobacter', 'Mobilitalea', 'Moorella', 'Moryella', 'Murimonas', 'Natranaerobaculum', 'Natranaerobius', 'Natroniella', 'Natronincola', 'Natronovirga', 'Oceanirhabdus', 'Orenia', 'Oribacterium', 'Oscillibacter', 'Oxobacter', 'Paeniclostridium', 'Papillibacter', 'Paraclostridium', 'Parasporobacterium', 'Pelospora', 'Pelotomaculum', 'Peptococcus', 'Peptoniphilus', 'Peptostreptococcus', 'Proteiniclasticum', 'Pseudobacteroides', 'Pseudobutyrivibrio', 'Pseudoramibacter', 'Robinsoniella', 'Romboutsia', 'Roseburia', 'Ruminococcus', 'Saccharofermentans', 'Salimesophilobacter', 'Selenihalanaerobacter', 'Sellimonas', 'Shuttleworthia', 'Sporacetigenium', 'Sporobacter', 'Sporobacterium', 'Sporohalobacter', 'Sporosalibacterium', 'Sporotomaculum', 'Stomatobaculum', 'Subdoligranulum', 'Symbiobacterium', 'Syntrophobotulus', 'Syntrophococcus', 'Syntrophomonas', 'Syntrophothermus', 'Tepidanaerobacter', 'Tepidibacter', 'Tepidimicrobium', 'Terrisporobacter', 'Thermacetogenium', 'Thermanaeromonas', 'Thermincola', 'Thermoanaerobacter', 'Thermobrachium', 'Thermodesulfobium', 'Thermohalobacter', 'Thermohydrogenium', 'Thermosyntropha', 'Thermotalea', 'Tindallia', 'Youngiibacter']

class Command(BaseCommand):
    help = "Prints attributes of each genus"

    def handle(self, *args, **options):
        fields = Genus._meta.get_fields()[1:]
        print("\t".join(field.name for field in fields))
        for genus in Genus.objects.all():
            if getattr(genus, "name") in clo_genera:
                print("\t".join(getattr(genus, field.name) for field in fields))
